{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","select","setSelect","id","setId","inputText","setInputText","todos","setTodos","onChange","e","target","value","type","className","onClick","preventDefault","text","completed","prev","name","Todo","todo","map","item","title","filter","el","TodoList","App","useState","filteredTodos","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","parse","Number","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAqCeA,MAnCf,YAA0F,EAA1EC,OAA2E,IAAnEC,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,GAAIC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAkB5E,OACE,iCACE,uBAAOC,SAnBc,SAAAC,GACvBJ,EAAaI,EAAEC,OAAOC,QAkBeA,MAAOP,EAAWQ,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAhBc,SAAAL,GACxBA,EAAEM,iBACFR,EAAS,GAAD,mBACHD,GADG,CACI,CAACJ,GAAIA,EAAIc,KAAMZ,EAAWa,WAAW,MAEjDd,GAAM,SAAAe,GAAI,OAAIA,EAAO,KACrBb,EAAa,KAUyBQ,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,kBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQL,SAXW,SAAAC,GACvBR,EAAUQ,EAAEC,OAAOC,QAUqBQ,KAAK,QAAQN,UAAU,cAA3D,UACE,wBAAQF,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCGKS,MA/Bf,YAAgD,IAAhCJ,EAA+B,EAA/BA,KAAMK,EAAyB,EAAzBA,KAAMf,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAiBjC,OACE,sBAAKM,UAAU,OAAf,UACE,oBAAIA,UAAS,oBAAeQ,EAAKJ,UAAY,YAAc,IAA3D,SAAkED,IAElE,wBAAQF,QAfY,WACtBP,EAASD,EAAMgB,KAAI,SAAAC,GACjB,OAAGA,EAAKrB,KAAOmB,EAAKnB,GACX,2BACFqB,GADL,IACWN,WAAYM,EAAKN,YAGvBM,OAQ2BV,UAAU,eAAeW,MAAM,OAAjE,SACE,mBAAGX,UAAU,mBAEf,wBAAQC,QAtBU,WACpBP,EAASD,EAAMmB,QAAO,SAAAC,GAAE,OAAIA,EAAGxB,KAAOmB,EAAKnB,QAqBTW,UAAU,YAAYW,MAAM,SAA5D,SACE,mBAAGX,UAAU,uBCZNc,MAZf,YAAwC,IAApBrB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzB,OACE,qBAAKM,UAAU,iBAAf,SACE,oBAAIA,UAAU,YAAd,SACGP,EAAMgB,KAAI,SAAAD,GAAI,OACb,cAAC,EAAD,CAAoBL,KAAMK,EAAKL,KAAMK,KAAMA,EAAMf,MAAOA,EAAOC,SAAUA,GAA9Dc,EAAKnB,YCiDX0B,MApDf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNzB,EADM,KACKC,EADL,OAEawB,mBAAS,IAFtB,mBAENvB,EAFM,KAECC,EAFD,OAGOsB,mBAAS,GAHhB,mBAGN3B,EAHM,KAGFC,EAHE,OAIe0B,mBAAS,OAJxB,mBAIN7B,EAJM,KAIEC,EAJF,OAK6B4B,mBAAS,IALtC,mBAKNC,EALM,KAKSC,EALT,KAyCb,OAlCAC,qBAAU,WAE6B,OAAlCC,aAAaC,QAAQ,SACtBD,aAAaE,QAAQ,QAASC,KAAKC,UAAU,KAE7C9B,EAAS6B,KAAKE,MAAML,aAAaC,QAAQ,WAGT,OAA/BD,aAAaC,QAAQ,MACtBD,aAAaE,QAAQ,KAAMC,KAAKC,UAAU,KAE1ClC,EAAMoC,OAAON,aAAaC,QAAQ,UAEnC,IAEHF,qBAAU,WAER,OAAOhC,GACL,IAAK,YACH+B,EAAiBzB,EAAMmB,QAAO,SAAAJ,GAAI,OAAuB,IAAnBA,EAAKJ,cAC3C,MACF,IAAK,cACHc,EAAiBzB,EAAMmB,QAAO,SAAAJ,GAAI,OAAuB,IAAnBA,EAAKJ,cAC3C,MACF,QACEc,EAAiBzB,GAIrB2B,aAAaE,QAAQ,QAASC,KAAKC,UAAU/B,IAC7C2B,aAAaE,QAAQ,KAAMjC,KAE1B,CAACA,EAAII,EAAON,IAGb,sBAAKa,UAAU,MAAf,UACE,iCACE,6CAEF,cAAC,EAAD,CAAMb,OAAQA,EAAQC,UAAWA,EAAWC,GAAIA,EAAIC,MAAOA,EAAOG,MAAOA,EAAOC,SAAUA,EAAUF,aAAcA,EAAcD,UAAWA,IAC3I,cAAC,EAAD,CAAUE,MAAOwB,EAAevB,SAAUA,QCxCjCiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c509e03d.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Form({ select, setSelect, id, setId, inputText, setInputText, todos, setTodos }) {\n  const inputTextHandler = e => {\n    setInputText(e.target.value)\n  }\n\n  const submitTodoHandler = e => {\n    e.preventDefault()\n    setTodos([\n      ...todos, {id: id, text: inputText, completed: false}\n    ])\n    setId(prev => prev + 1)\n    setInputText('')\n  }\n\n  const selectionHandler = e => {\n    setSelect(e.target.value)\n  }\n\n  return (\n    <form>\n      <input onChange={inputTextHandler} value={inputText} type=\"text\" className=\"todo-input\" />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={selectionHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  )\n}\n\nexport default Form\n","import React from 'react'\n\nfunction Todo({ text, todo, todos, setTodos }) {\n\n  const deleteHandler = () => {\n    setTodos(todos.filter(el => el.id !== todo.id))\n  }\n\n  const completeHandler = () => {\n    setTodos(todos.map(item => {\n      if(item.id === todo.id) {\n        return {\n          ...item, completed: !item.completed\n        }\n      }\n      return item\n    }))\n  }\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>{text}</li>\n\n      <button onClick={completeHandler} className=\"complete-btn\" title=\"Done\">\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\" title=\"Delete\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  )\n}\n\nexport default Todo\n","import React from 'react'\nimport Todo from './Todo'\n\nfunction TodoList({ todos, setTodos }) {\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <Todo key={todo.id} text={todo.text} todo={todo} todos={todos} setTodos={setTodos} />\n        ))}\n      </ul>    \n    </div>\n  )\n}\n\nexport default TodoList\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Form from './Components/Form'\nimport TodoList from './Components/TodoList'\n\nfunction App() {\n  const [inputText, setInputText] = useState('')\n  const [todos, setTodos] = useState([])\n  const [id, setId] = useState(0)\n  const [select, setSelect] = useState('all')\n  const [filteredTodos, setFilteredTodos] = useState([])\n\n  useEffect(() => {\n    // Retrieve from local storage\n    if(localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]))\n    } else {\n      setTodos(JSON.parse(localStorage.getItem('todos')))\n    }\n\n    if(localStorage.getItem('id') === null) {\n      localStorage.setItem('id', JSON.stringify([]))\n    } else {\n      setId(Number(localStorage.getItem('id')))\n    }\n  }, [])\n\n  useEffect(() => {\n    // filter\n    switch(select){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos)\n    }\n\n    // Save to local storage\n    localStorage.setItem('todos', JSON.stringify(todos))\n    localStorage.setItem('id', id)\n\n  }, [id, todos, select])\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form select={select} setSelect={setSelect} id={id} setId={setId} todos={todos} setTodos={setTodos} setInputText={setInputText} inputText={inputText} />\n      <TodoList todos={filteredTodos} setTodos={setTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}